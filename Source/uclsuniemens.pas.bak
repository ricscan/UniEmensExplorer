unit UClsUniEmens;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils,Contnrs;

Type
  TInquadramentoLavPA = class
    TipoImpiego  :integer;
    TipoServizio :integer;
    Contratto    :String;
    Qualifica    :String;
    RegimeFineServizio:Integer;
  end;

  TGestioni = class

  end;

  { TE0_PeriodoNelMese }
  TE0_PeriodoNelMese = Class
    GiornoInizio :TDate;
    GiornoFine   :TDate;
    InquadramentoLavPA : TInquadramentoLavPA;
    Gestioni           : TGestioni;
    Constructor Create;
    Destructor Destroy;
  end;

  TDatiSedeLavoro = class
    CodiceComune :String;
    CAP          :String;
  end;

  { TD0_DenunciaIndividuale }
  TD0_DenunciaIndividuale = Class
     CFLavoratore :String; //16C
     Cognome      :String; //1-40C
     Nome         :String; //1-30C
     //DatiPrevCompl+
     DatiSedeLavoro : TDatiSedeLavoro;
     Lst_E0_PeriodoNelMese :TObjectList;
     Lst_E1_FondoPensioneCompl:TObjectList;
     Lst_F1_Ammortamento:TObjectList;
     Lst_V1_PeriodoPrecedente:TObjectList;
     Function Nominativo:String;
     Constructor Create;
     Destructor Destroy;
  end;

  { TPosPa }
  TPosPa = Class
    private
      Lst_DenInd : TObjectList;
      function GetItems(i: integer): TD0_DenunciaIndividuale;
      procedure SetItems(i: integer; AValue: TD0_DenunciaIndividuale);
    public
      property items[i:integer]:TD0_DenunciaIndividuale read GetItems write SetItems; default;
    Constructor Create;
    Destructor Destroy;
    Procedure Insert(CF,Cognome,Nome: String);
    Procedure Add(D0:TD0_DenunciaIndividuale);
    function Count:Integer;
  end;

implementation

{ TE0_PeriodoNelMese }

constructor TE0_PeriodoNelMese.Create;
begin
  InquadramentoLavPa:=TInquadramentoLavPa.Create;
  Gestioni:=TGestioni.Create;
end;

destructor TE0_PeriodoNelMese.Destroy;
begin
  InquadramentoLavPa.Free;
  Gestioni.free;
end;

{ TD0_DenunciaIndividuale }

function TD0_DenunciaIndividuale.Nominativo: String;
begin
  Nominativo:=Cognome + ' '+Nome;
end;

constructor TD0_DenunciaIndividuale.Create;
begin
  DatiSedeLavoro:=TDatiSedeLavoro.Create;
  Lst_E0_PeriodoNelMese :=TObjectList.Create;
  Lst_E1_FondoPensioneCompl:=TObjectList.Create;
  Lst_F1_Ammortamento:=TObjectList.Create;
  Lst_V1_PeriodoPrecedente:=TObjectList.Create;
end;

destructor TD0_DenunciaIndividuale.Destroy;
begin
  DatiSedeLavoro.free;
  Lst_E0_PeriodoNelMese.free;
  Lst_E1_FondoPensioneCompl.free;
  Lst_F1_Ammortamento.free;
  Lst_V1_PeriodoPrecedente.free;
end;

{ TPosPa }

function TPosPa.GetItems(i: integer): TD0_DenunciaIndividuale;
begin
  GetItems:=TD0_DenunciaIndividuale(Lst_DenInd.Items[i]);
end;

procedure TPosPa.SetItems(i: integer; AValue: TD0_DenunciaIndividuale);
begin

end;

constructor TPosPa.Create;
begin
  Lst_DenInd:= TObjectList.create;
end;

destructor TPosPa.Destroy;
begin
  Lst_DenInd.free;
end;

procedure TPosPa.Insert(CF,Cognome,Nome: String);
var
  D0:TD0_DenunciaIndividuale;
begin
  D0:=TD0_DenunciaIndividuale.Create;
  D0.CFLavoratore :=CF;
  D0.Cognome      :=Cognome;
  D0.Nome         :=Nome;
  Lst_DenInd.Add(D0);
end;

procedure TPosPa.Add(D0: TD0_DenunciaIndividuale);
begin
  Lst_DenInd.Add(D0);
end;

function TPosPa.Count: Integer;
begin
  Count:=Lst_DenInd.Count;
end;

end.

